digraph {
Node0x32122c0[label="  %2 = load i32* %dlti, align 4, !tbaa !..."];
Node0x32122c0 -> Node0x32122c0[label="D:0.00ns L:2",color=blue];
Node0x3212ae0[label="  store i32 %10, i32* %bli, align 4, !tb..."];
Node0x32122c0 -> Node0x3212ae0[label="D:0.00ns L:2",color=red];
Node0x3211a50[label="  store i32 %21, i32* %17, align 4, !tba..."];
Node0x32122c0 -> Node0x3211a50[label="D:0.00ns L:2",color=red];
Node0x3214150[label="  store i32 %32, i32* %28, align 4, !tba..."];
Node0x32122c0 -> Node0x3214150[label="D:0.00ns L:2",color=red];
Node0x3213900[label="  store i32 %43, i32* %39, align 4, !tba..."];
Node0x32122c0 -> Node0x3213900[label="D:0.00ns L:2",color=red];
Node0x3215c10[label="  store i32 %54, i32* %50, align 4, !tba..."];
Node0x32122c0 -> Node0x3215c10[label="D:0.00ns L:2",color=red];
Node0x32154a0[label="  store i32 %65, i32* %61, align 4, !tba..."];
Node0x32122c0 -> Node0x32154a0[label="D:0.00ns L:2",color=red];
Node0x32123a0[label="  %3 = mul nsw i32 %2, %dlt"];
Node0x32123a0 -> Node0x32123a0[label="D:2.59ns L:1",color=blue];
Node0x31009e0[label="  %4 = ashr i32 %3, 31"];
Node0x31009e0 -> Node0x31009e0[label="D:0.00ns L:0",color=blue];
Node0x3100ac0[label="  %5 = and i32 %4, -256"];
Node0x3100ac0 -> Node0x3100ac0[label="D:0.00ns L:0",color=blue];
Node0x3100ba0[label="  %6 = or i32 %5, 128"];
Node0x3100ba0 -> Node0x3100ba0[label="D:0.00ns L:0",color=blue];
Node0x3100c80[label="  %7 = load i32* %bli, align 4, !tbaa !1"];
Node0x3100c80 -> Node0x3100c80[label="D:0.00ns L:2",color=blue];
Node0x3100c80 -> Node0x3212ae0[label="D:0.00ns L:2",color=red];
Node0x3100d60[label="  %8 = mul nsw i32 %7, 255"];
Node0x3100d60 -> Node0x3100d60[label="D:2.59ns L:1",color=blue];
Node0x3100e60[label="  %9 = ashr i32 %8, 8"];
Node0x3100e60 -> Node0x3100e60[label="D:0.00ns L:0",color=blue];
Node0x3100f40[label="  %10 = add nsw i32 %6, %9"];
Node0x3100f40 -> Node0x3100f40[label="D:2.50ns L:0",color=blue];
Node0x3212ca0[label="  %12 = load i32* %11, align 4, !tbaa !1"];
Node0x3212ae0 -> Node0x3212ca0[label="D:5.00ns L:1",color=red];
Node0x3211c50[label="  %23 = load i32* %22, align 4, !tbaa !1"];
Node0x3212ae0 -> Node0x3211c50[label="D:5.00ns L:1",color=red];
Node0x3212fc0[label="  %34 = load i32* %33, align 4, !tbaa !1"];
Node0x3212ae0 -> Node0x3212fc0[label="D:5.00ns L:1",color=red];
Node0x3100650[label="  %45 = load i32* %44, align 4, !tbaa !1"];
Node0x3212ae0 -> Node0x3100650[label="D:5.00ns L:1",color=red];
Node0x3214b60[label="  %56 = load i32* %55, align 4, !tbaa !1"];
Node0x3212ae0 -> Node0x3214b60[label="D:5.00ns L:1",color=red];
Node0x3212bc0[label="  %11 = getelementptr inbounds i32* %dlt..."];
Node0x3212bc0 -> Node0x3212bc0[label="D:0.00ns L:0",color=blue];
Node0x3212bc0 -> Node0x3212bc0[label="D:0.00ns L:0",color=blue];
Node0x3212ca0 -> Node0x3212ca0[label="D:0.00ns L:2",color=blue];
Node0x3212ca0 -> Node0x3211a50[label="D:0.00ns L:2",color=red];
Node0x3212ca0 -> Node0x3214150[label="D:0.00ns L:2",color=red];
Node0x3212ca0 -> Node0x3213900[label="D:0.00ns L:2",color=red];
Node0x3212ca0 -> Node0x3215c10[label="D:0.00ns L:2",color=red];
Node0x3212ca0 -> Node0x32154a0[label="D:0.00ns L:2",color=red];
Node0x3211210[label="  %13 = mul nsw i32 %12, %dlt"];
Node0x3211210 -> Node0x3211210[label="D:2.59ns L:1",color=blue];
Node0x3211310[label="  %14 = ashr i32 %13, 31"];
Node0x3211310 -> Node0x3211310[label="D:0.00ns L:0",color=blue];
Node0x32113f0[label="  %15 = and i32 %14, -256"];
Node0x32113f0 -> Node0x32113f0[label="D:0.00ns L:0",color=blue];
Node0x32114d0[label="  %16 = or i32 %15, 128"];
Node0x32114d0 -> Node0x32114d0[label="D:0.00ns L:0",color=blue];
Node0x32115b0[label="  %17 = getelementptr inbounds i32* %bli..."];
Node0x32115b0 -> Node0x32115b0[label="D:0.00ns L:0",color=blue];
Node0x32115b0 -> Node0x32115b0[label="D:0.00ns L:0",color=blue];
Node0x3211690[label="  %18 = load i32* %17, align 4, !tbaa !1"];
Node0x3211690 -> Node0x3211690[label="D:0.00ns L:2",color=blue];
Node0x3211690 -> Node0x3211a50[label="D:0.00ns L:2",color=red];
Node0x32117b0[label="  %19 = mul nsw i32 %18, 255"];
Node0x32117b0 -> Node0x32117b0[label="D:2.59ns L:1",color=blue];
Node0x3211890[label="  %20 = ashr i32 %19, 8"];
Node0x3211890 -> Node0x3211890[label="D:0.00ns L:0",color=blue];
Node0x3211970[label="  %21 = add nsw i32 %16, %20"];
Node0x3211970 -> Node0x3211970[label="D:2.50ns L:0",color=blue];
Node0x3211a50 -> Node0x3211c50[label="D:5.00ns L:1",color=red];
Node0x3211a50 -> Node0x3212fc0[label="D:5.00ns L:1",color=red];
Node0x3211a50 -> Node0x3100650[label="D:5.00ns L:1",color=red];
Node0x3211a50 -> Node0x3214b60[label="D:5.00ns L:1",color=red];
Node0x3211b70[label="  %22 = getelementptr inbounds i32* %dlt..."];
Node0x3211b70 -> Node0x3211b70[label="D:0.00ns L:0",color=blue];
Node0x3211b70 -> Node0x3211b70[label="D:0.00ns L:0",color=blue];
Node0x3211c50 -> Node0x3211c50[label="D:0.00ns L:2",color=blue];
Node0x3211c50 -> Node0x3214150[label="D:0.00ns L:2",color=red];
Node0x3211c50 -> Node0x3213900[label="D:0.00ns L:2",color=red];
Node0x3211c50 -> Node0x3215c10[label="D:0.00ns L:2",color=red];
Node0x3211c50 -> Node0x32154a0[label="D:0.00ns L:2",color=red];
Node0x3211d70[label="  %24 = mul nsw i32 %23, %dlt"];
Node0x3211d70 -> Node0x3211d70[label="D:2.59ns L:1",color=blue];
Node0x3211e50[label="  %25 = ashr i32 %24, 31"];
Node0x3211e50 -> Node0x3211e50[label="D:0.00ns L:0",color=blue];
Node0x3211f30[label="  %26 = and i32 %25, -256"];
Node0x3211f30 -> Node0x3211f30[label="D:0.00ns L:0",color=blue];
Node0x3212010[label="  %27 = or i32 %26, 128"];
Node0x3212010 -> Node0x3212010[label="D:0.00ns L:0",color=blue];
Node0x32120f0[label="  %28 = getelementptr inbounds i32* %bli..."];
Node0x32120f0 -> Node0x32120f0[label="D:0.00ns L:0",color=blue];
Node0x32120f0 -> Node0x32120f0[label="D:0.00ns L:0",color=blue];
Node0x3212d80[label="  %29 = load i32* %28, align 4, !tbaa !1"];
Node0x3212d80 -> Node0x3212d80[label="D:0.00ns L:2",color=blue];
Node0x3212d80 -> Node0x3214150[label="D:0.00ns L:2",color=red];
Node0x3213eb0[label="  %30 = mul nsw i32 %29, 255"];
Node0x3213eb0 -> Node0x3213eb0[label="D:2.59ns L:1",color=blue];
Node0x3213f90[label="  %31 = ashr i32 %30, 8"];
Node0x3213f90 -> Node0x3213f90[label="D:0.00ns L:0",color=blue];
Node0x3214070[label="  %32 = add nsw i32 %27, %31"];
Node0x3214070 -> Node0x3214070[label="D:2.50ns L:0",color=blue];
Node0x3214150 -> Node0x3212fc0[label="D:5.00ns L:1",color=red];
Node0x3214150 -> Node0x3100650[label="D:5.00ns L:1",color=red];
Node0x3214150 -> Node0x3214b60[label="D:5.00ns L:1",color=red];
Node0x3212ee0[label="  %33 = getelementptr inbounds i32* %dlt..."];
Node0x3212ee0 -> Node0x3212ee0[label="D:0.00ns L:0",color=blue];
Node0x3212ee0 -> Node0x3212ee0[label="D:0.00ns L:0",color=blue];
Node0x3212fc0 -> Node0x3212fc0[label="D:0.00ns L:2",color=blue];
Node0x3212fc0 -> Node0x3213900[label="D:0.00ns L:2",color=red];
Node0x3212fc0 -> Node0x3215c10[label="D:0.00ns L:2",color=red];
Node0x3212fc0 -> Node0x32154a0[label="D:0.00ns L:2",color=red];
Node0x32130e0[label="  %35 = mul nsw i32 %34, %dlt"];
Node0x32130e0 -> Node0x32130e0[label="D:2.59ns L:1",color=blue];
Node0x32131c0[label="  %36 = ashr i32 %35, 31"];
Node0x32131c0 -> Node0x32131c0[label="D:0.00ns L:0",color=blue];
Node0x32132a0[label="  %37 = and i32 %36, -256"];
Node0x32132a0 -> Node0x32132a0[label="D:0.00ns L:0",color=blue];
Node0x3213380[label="  %38 = or i32 %37, 128"];
Node0x3213380 -> Node0x3213380[label="D:0.00ns L:0",color=blue];
Node0x3213460[label="  %39 = getelementptr inbounds i32* %bli..."];
Node0x3213460 -> Node0x3213460[label="D:0.00ns L:0",color=blue];
Node0x3213460 -> Node0x3213460[label="D:0.00ns L:0",color=blue];
Node0x3213540[label="  %40 = load i32* %39, align 4, !tbaa !1"];
Node0x3213540 -> Node0x3213540[label="D:0.00ns L:2",color=blue];
Node0x3213540 -> Node0x3213900[label="D:0.00ns L:2",color=red];
Node0x3213660[label="  %41 = mul nsw i32 %40, 255"];
Node0x3213660 -> Node0x3213660[label="D:2.59ns L:1",color=blue];
Node0x3213740[label="  %42 = ashr i32 %41, 8"];
Node0x3213740 -> Node0x3213740[label="D:0.00ns L:0",color=blue];
Node0x3213820[label="  %43 = add nsw i32 %38, %42"];
Node0x3213820 -> Node0x3213820[label="D:2.50ns L:0",color=blue];
Node0x3213900 -> Node0x3100650[label="D:5.00ns L:1",color=red];
Node0x3213900 -> Node0x3214b60[label="D:5.00ns L:1",color=red];
Node0x3100570[label="  %44 = getelementptr inbounds i32* %dlt..."];
Node0x3100570 -> Node0x3100570[label="D:0.00ns L:0",color=blue];
Node0x3100570 -> Node0x3100570[label="D:0.00ns L:0",color=blue];
Node0x3100650 -> Node0x3100650[label="D:0.00ns L:2",color=blue];
Node0x3100650 -> Node0x3215c10[label="D:0.00ns L:2",color=red];
Node0x3100650 -> Node0x32154a0[label="D:0.00ns L:2",color=red];
Node0x3100770[label="  %46 = mul nsw i32 %45, %dlt"];
Node0x3100770 -> Node0x3100770[label="D:2.59ns L:1",color=blue];
Node0x3100880[label="  %47 = ashr i32 %46, 31"];
Node0x3100880 -> Node0x3100880[label="D:0.00ns L:0",color=blue];
Node0x32139e0[label="  %48 = and i32 %47, -256"];
Node0x32139e0 -> Node0x32139e0[label="D:0.00ns L:0",color=blue];
Node0x3213ac0[label="  %49 = or i32 %48, 128"];
Node0x3213ac0 -> Node0x3213ac0[label="D:0.00ns L:0",color=blue];
Node0x3213ba0[label="  %50 = getelementptr inbounds i32* %bli..."];
Node0x3213ba0 -> Node0x3213ba0[label="D:0.00ns L:0",color=blue];
Node0x3213ba0 -> Node0x3213ba0[label="D:0.00ns L:0",color=blue];
Node0x3213c80[label="  %51 = load i32* %50, align 4, !tbaa !1"];
Node0x3213c80 -> Node0x3213c80[label="D:0.00ns L:2",color=blue];
Node0x3213c80 -> Node0x3215c10[label="D:0.00ns L:2",color=red];
Node0x3213da0[label="  %52 = mul nsw i32 %51, 255"];
Node0x3213da0 -> Node0x3213da0[label="D:2.59ns L:1",color=blue];
Node0x3215a50[label="  %53 = ashr i32 %52, 8"];
Node0x3215a50 -> Node0x3215a50[label="D:0.00ns L:0",color=blue];
Node0x3215b30[label="  %54 = add nsw i32 %49, %53"];
Node0x3215b30 -> Node0x3215b30[label="D:2.50ns L:0",color=blue];
Node0x3215c10 -> Node0x3214b60[label="D:5.00ns L:1",color=red];
Node0x3214a80[label="  %55 = getelementptr inbounds i32* %dlt..."];
Node0x3214a80 -> Node0x3214a80[label="D:0.00ns L:0",color=blue];
Node0x3214a80 -> Node0x3214a80[label="D:0.00ns L:0",color=blue];
Node0x3214b60 -> Node0x3214b60[label="D:0.00ns L:2",color=blue];
Node0x3214b60 -> Node0x32154a0[label="D:0.00ns L:2",color=red];
Node0x3214c80[label="  %57 = mul nsw i32 %56, %dlt"];
Node0x3214c80 -> Node0x3214c80[label="D:2.59ns L:1",color=blue];
Node0x3214d60[label="  %58 = ashr i32 %57, 31"];
Node0x3214d60 -> Node0x3214d60[label="D:0.00ns L:0",color=blue];
Node0x3214e40[label="  %59 = and i32 %58, -256"];
Node0x3214e40 -> Node0x3214e40[label="D:0.00ns L:0",color=blue];
Node0x3214f20[label="  %60 = or i32 %59, 128"];
Node0x3214f20 -> Node0x3214f20[label="D:0.00ns L:0",color=blue];
Node0x3215000[label="  %61 = getelementptr inbounds i32* %bli..."];
Node0x3215000 -> Node0x3215000[label="D:0.00ns L:0",color=blue];
Node0x3215000 -> Node0x3215000[label="D:0.00ns L:0",color=blue];
Node0x32150e0[label="  %62 = load i32* %61, align 4, !tbaa !1"];
Node0x32150e0 -> Node0x32150e0[label="D:0.00ns L:2",color=blue];
Node0x32150e0 -> Node0x32154a0[label="D:0.00ns L:2",color=red];
Node0x3215200[label="  %63 = mul nsw i32 %62, 255"];
Node0x3215200 -> Node0x3215200[label="D:2.59ns L:1",color=blue];
Node0x32152e0[label="  %64 = ashr i32 %63, 8"];
Node0x32152e0 -> Node0x32152e0[label="D:0.00ns L:0",color=blue];
Node0x32153c0[label="  %65 = add nsw i32 %60, %64"];
Node0x32153c0 -> Node0x32153c0[label="D:2.50ns L:0",color=blue];
}
